spring:
  mvc:
    static-path-pattern: /**
    locale: ru_RU
  resources:
    add-mappings: true
    cache:
      period: 3600
      cachecontrol:
        max-age: 1d
  sbp:
    runtime-mode: development
#    runtime-mode: deployment
    plugins-root: plugins
    enabled: true
    auto-start-plugin: true
    classes-directories:
      - "target/classes"
    controller:
      base-path: "/sbp/admin"
    disabled-plugins:
      - "report-plugin"
      - "test-plugin"
      - "booking-plugin"
      - "zerotouch-plugin"
      - "tgbot-plugin"
      - "mega-plugin"
      - "parkomat-status-plugin"
    main:
      banner-mode: off
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/crm?allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: root
    hikari:
      idle-timeout: 10000
      pool-name: SptRootHikariPool
      connection-timeout: 20000 #Максимальное количество миллисекунд для ожидания подключения из пула
                                #Значение конструктора по умолчанию: SECONDS.toMillis(30) = 30000 Значение конфигурации по умолчанию после проверки: 	30000
      minimum-idle: 10 #Минимальное количество неактивных соединений, поддерживаемых в пуле
                        #Значение конструктора по умолчанию: -1	Значение конфигурации по умолчанию после проверки: 10

      maximum-pool-size: 10 #Максимальное количество соединений в пуле, включая неактивные и используемые соединения.
                            #Значение конструктора по умолчанию: -1	Значение конфигурации по умолчанию после проверки: 	10

      max-lifetime: 30001 # Самый долгий срок жизни соединения в пуле 	MINUTES.toMillis(30) = 1800000 	1800000
                         # Если он не равен 0 и меньше 30 секунд, он будет сброшен до 30 минут.

      auto-commit: false #Автоматически отправлять соединение, возвращаемое из пула
                        #Значение конструктора по умолчанию: TRUE	Значение конфигурации по умолчанию после проверки: TRUE
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL55Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL55Dialect
        jdbc:
          time_zone: UTC
  thymeleaf:
    mode: HTML
    cache: false
  flyway:
    enabled: false
  main:
    banner-mode: off
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 30MB
      max-request-size: 30MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: parqour.smartparking@gmail.com
    password: aqaxhlmflyfvujnr
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          starttls:
            enable: true
  task:
    scheduling:
      pool:
        size: 10
org:
  hibernate:
    envers:
      audit_table_suffix=_audit
      default_schema=crm
server:
  servlet:
    session:
      timeout: 57600 # 16 hours lasts session
images:
  file:
    path: "~/Documents"
barrier:
  open:
    disabled: true #Для локальной работы без подключения к сенсорам и шлагбаумам
  modbus:
    icpdas:
      old:
        way: false
status:
  check:
    fixedDelay: 250 # Период проверки статуса сенсоров в милисекундах
car:
  movement:
    simulate: false # Симуляция проезда и выезда авто.
whitelist:
  group:
    show:
      advanced: true # Показать дополнительные привязку авто к номеру места в парковках в группах белого списка
parking:
  has:
    access:
      lcd: true
      unknown:
        cases: false # Выпускать все авто где вьезд не найден
  remove:
    all:
      debts: false # удалят все долги после 03.00 утра
  only:
    register:
      cars: false #просто регистрирует въезды и выезды, система без шлагбаумом
  ignore:
    left:
      seconds: 20 # ignore from any camera if car left from other camera, default 20 seconds
    entered:
      seconds: 20 # ignore from any camera if car entered from other camera, default 20 seconds
parkomat.ip:
carmen:
  live.enabled: true
  image.enabled: false
parkings:
  uid: DEMO
thirdPartyPayment:
  url: http://213.5.190.51:8000/api/parking_payments/post_link_spt/
notification:
  url: https://app.magnum.kz/test-services/parking-api/v2/parking/tickets
  token: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmxiV0ZwYkNJNkltMWhibUZuWlhKQWJXRm5iblZ0TG10NkluMC5LSE4wWkdsdUtUMGdZekpqTnpNM05qZzJZall4Tm1NMk9XWXdOMkl4WXpkbU16WTJNR0UyTlRnNU1UTXlORGhpWVRKaVpqazJORFprClkyVmpNamN6TVdVek9HTmpOR1JsTndv
  send: false
  parkingUid: DEMO
booking:
  check.out: false
cors:
  allowed:
    origins:
      - http://localhost:3000
      - https://parqour-web-app.herokuapp.com
telegram:
  bot:
    external:
      enabled: false
kaspi:
  qr-link: https://kaspi.kz/pay/%s?service_id=%s&%s=
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
admin-place:
  pass: $2a$10$FMkv8WJlOGDnrsZ7Ph4/9uyWrFhxiTwRXAS50qs.R9jPdpI7J3poK
rest-admin:
  login: rest
  password: d8G3v1@0Ig#lNyrVG3I7Sw1oxx!
