spring:
  mvc:
    static-path-pattern: /**
  resources:
    add-mappings: true
    cache:
      period: 3600
  sbp:
    runtime-mode: deployment
    plugins-root: plugins
    enabled: true
    auto-start-plugin: true
    controller:
      base-path: "/sbp/admin"
    plugin-properties:
      spring:
        datasource:
          type: com.zaxxer.hikari.HikariDataSource
          url: jdbc:mysql://db/new_parking?socketTimeout=30000&allowPublicKeyRetrieval=true&useSSL=false
          username: root
          password: root
          hikari:
            idle-timeout: 10000
            pool-name: SptRootHikariPool
            connection-timeout: 20000 #Максимальное количество миллисекунд для ожидания подключения из пула
            #Значение конструктора по умолчанию: SECONDS.toMillis(30) = 30000 Значение конфигурации по умолчанию после проверки: 	30000
            minimum-idle: 10 #Минимальное количество неактивных соединений, поддерживаемых в пуле
            #Значение конструктора по умолчанию: -1	Значение конфигурации по умолчанию после проверки: 10
            maximum-pool-size: 10 #Максимальное количество соединений в пуле, включая неактивные и используемые соединения.
            #Значение конструктора по умолчанию: -1	Значение конфигурации по умолчанию после проверки: 	10
            max-lifetime: 1800000 # Самый долгий срок жизни соединения в пуле 	MINUTES.toMillis(30) = 1800000 	1800000
            # Если он не равен 0 и меньше 30 секунд, он будет сброшен до 30 минут.
            auto-commit: false #Автоматически отправлять соединение, возвращаемое из пула
              #Значение конструктора по умолчанию: TRUE	Значение конфигурации по умолчанию после проверки: TRUE
        jpa:
          hibernate:
            ddl-auto: update
          database-platform: org.hibernate.dialect.MySQL55Dialect
          properties:
            hibernate:
              dialect: org.hibernate.dialect.MySQL55Dialect
              jdbc:
                time_zone: UTC
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://db/new_parking?socketTimeout=30000&allowPublicKeyRetrieval=true&useSSL=false
    username: root
    password: root
    hikari:
      idle-timeout: 10000
      pool-name: SptRootHikariPool
      connection-timeout: 20000 #Максимальное количество миллисекунд для ожидания подключения из пула
      #Значение конструктора по умолчанию: SECONDS.toMillis(30) = 30000 Значение конфигурации по умолчанию после проверки: 	30000
      minimum-idle: 10 #Минимальное количество неактивных соединений, поддерживаемых в пуле
      #Значение конструктора по умолчанию: -1	Значение конфигурации по умолчанию после проверки: 10
      maximum-pool-size: 10 #Максимальное количество соединений в пуле, включая неактивные и используемые соединения.
      #Значение конструктора по умолчанию: -1	Значение конфигурации по умолчанию после проверки: 	10
      max-lifetime: 30001 # Самый долгий срок жизни соединения в пуле 	MINUTES.toMillis(30) = 1800000 	1800000
      # Если он не равен 0 и меньше 30 секунд, он будет сброшен до 30 минут.
      auto-commit: false #Автоматически отправлять соединение, возвращаемое из пула
      #Значение конструктора по умолчанию: TRUE	Значение конфигурации по умолчанию после проверки: TRUE
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.MySQL55Dialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL55Dialect
        jdbc:
          time_zone: UTC
#    open-in-view: false TODO: enable in production to reduce database connect on every web page call
  thymeleaf:
    mode: HTML
    cache: false
  flyway:
    enabled: false
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  mail:
    host: smtp.gmail.com
    port: 587
    username: parqour.smartparking@gmail.com
    password: aqaxhlmflyfvujnr
    properties:
      mail:
        smtp:
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          starttls:
            enable: true
  task:
    scheduling:
      pool:
        size: 10
  jmx:
    enabled: true
server:
  tomcat:
    protocol-header: x-forwarded-proto
  servlet:
    session:
      timeout: 57600 # 16 hours lasts session
org:
  hibernate:
    envers:
      audit_table_suffix: _audit
      default_schema: new_parking
images:
  file:
    path: "/files/pictures"
barrier:
  open:
    disabled: false
  modbus:
    icpdas:
      old:
        way: false
car:
  movement:
    simulate: false
status:
  check:
    fixedDelay: 250
whitelist:
  group:
    show:
      advanced: false
booking:
  check.out: false
  halapark:
    check: false # включить проверку booking для разных операторов.
    tokenUrl: http://halapark.calltekky.com/api/auth/getToken
    postUrl: http://halapark.calltekky.com/api/auth/getBookingByParquorcameras
zero:
  touch:
    rahmet:
      check: false
      tokenUrl: https://gateway.chocodev.kz/auth/token
      clientId: 35000006
      clientPassword: f5ae4d63b60d9845f95a69bc4240806810338b940a2d0ee8211270a303be66e1
      filialId: 4752
      postUrl: gateway.chocodev.kz/payments/v1/smartparking/pay
parking:
  has:
    access:
      lcd: false
      unknown:
        cases: false # Выпускать все авто где вьезд не найден
  remove:
    all:
      debts: false
  only:
    register:
      cars: false
  ignore:
    left:
      seconds: 20 # ignore from any camera if car left from other camera, default 20 seconds
    entered:
      seconds: 20 # ignore from any camera if car entered from other camera, default 20 seconds
webkassa:
  host: https://kkm.webkassa.kz
rekassa:
  host: https://api.rekassa.kz/api
telegram:
  bot:
    external:
      enabled: false
parkings:
  uid: DEMO
thirdPartyPayment:
  url: https://mega.parqour.com/mega/client/notify
notification:
  url: http://app.magnum.kz/test-services/parking-api/v2/parking/tickets
  send: false
  parkingUid: DEMO
  token: ZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SmxiV0ZwYkNJNkltMWhibUZuWlhKQWJXRm5iblZ0TG10NkluMC5LSE4wWkdsdUtUMGdZekpqTnpNM05qZzJZall4Tm1NMk9XWXdOMkl4WXpkbU16WTJNR0UyTlRnNU1UTXlORGhpWVRKaVpqazJORFprClkyVmpNamN6TVdVek9HTmpOR1JsTndv
kaspi:
  qr-link: https://kaspi.kz/pay/%s?service_id=%s&%s=
carmen:
  live.enabled: false
  image.enabled: false
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true